cmdhistory=["(cycle [1 1 2 2])" "(take (+ 1 (count [1 1 2 2])) (cycle [1 1 2 2]))" "(take 5 [1 1 2 2])" "(take 5 (cycle [1 1 2 2]))" "(reduce \\n  (fn [a b] (conj a (+' (last a) (last (butlast a)))))  \\n  [0 1]                      \\n  (range 8))" "(+' 2 4)" "(range 8)" "(def x [1 1 2 2])" "x" "(reduce (fn [a b] (+ a b)) (last x) x)" "(reductions (fn [a b] (+ a b)) (last x) x)" "(reduce (fn [a b] (if (\= a b) (+ a b) 0)) (last x) x)" "(reduce (fn [a b] (conj (if (\= a b) (+ a b) 0)) b) (last x) x)" "(reduce (fn [a b] (print a b)(if (\= a b) (+ a b) 0)) (last x) x)" "(reduce (fn [a b] (println a b)(if (\= a b) (+ a b) 0)) (last x) x)" "(conj 0 1)" "(list 0 1)" "(reduce (fn [a b] (let [c (last a)] (println a b c) (concat (if (\= c b) (+ c b) 0)) b)) [(last x)] x)" "(reduce (fn [a b] (let [c (last a)] (println a b c) (conj a (if (\= c b) (+ c b) 0)) b)) [(last x)] x)" "(conj 0 1)" "(reduce (fn [a b] (let [c (last a)] (println a b c) (conj a (if (\= c b) (+ c b) 0) b))) [(last x)] x)" "(map-indexed (fn [index a] (get x index)) x)" "(map-indexed (fn [index a] (let [b (get x index)] (if (\= a b) (+ a b) 0))) x)" "(map-indexed (fn [index a] (let [b (get x (inc index))] (if (\= a b) (+ a b) 0))) x)" "(map-indexed (fn [index a] (let [b (get x (inc index))] (if (\= a b) a 0))) x)" "(reduce +\\n    (map-indexed (fn [index a] (let [b (get x (inc index))] (if (\= a b) a 0))) x)\\n  )" "(get x 4)" "(reverseCaptcha [1 1 1 1])" "(seq \\"91212129\\")" "(map \#(Integer/parseInt (str %)) (seq \\"91212129\\"))" "(reverseCaptcha (map \#(Integer/parseInt (str %)) (seq \\"91212129\\")))" "(reverseCaptcha [9 1 2 1 2 1 2 9])" "(count (9 1 2 1 2 1 2 9))" "(count '(9 1 2 1 2 1 2 9))" "(reverseCaptcha (map \#(Integer/parseInt (str %)) (seq \\"91212129\\")))" "(reverseCaptcha '(map \#(Integer/parseInt (str %)) (seq \\"91212129\\")))" "(reverseCaptcha (mapv \#(Integer/parseInt (str %)) (seq \\"91212129\\")))" "(result)" "result"]
eclipse.preferences.version=1
